digraph "CFG for '_Z24cuda_compute_step_factoriPfS_S_' function" {
	label="CFG for '_Z24cuda_compute_step_factoriPfS_S_' function";

	Node0x55bbb55c2890 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%4:\l  %5 = tail call align 4 dereferenceable(64) i8 addrspace(4)*\l... @llvm.amdgcn.dispatch.ptr() #3\l  %6 = getelementptr i8, i8 addrspace(4)* %5, i64 4\l  %7 = bitcast i8 addrspace(4)* %6 to i16 addrspace(4)*\l  %8 = load i16, i16 addrspace(4)* %7, align 4, !range !4, !invariant.load !5\l  %9 = tail call i32 @llvm.amdgcn.workgroup.id.x() #3\l  %10 = zext i16 %8 to i64\l  %11 = zext i32 %9 to i64\l  %12 = mul nuw nsw i64 %10, %11\l  %13 = tail call i32 @llvm.amdgcn.workitem.id.x() #3, !range !6\l  %14 = zext i32 %13 to i64\l  %15 = add nuw nsw i64 %12, %14\l  %16 = trunc i64 %15 to i32\l  %17 = shl i64 %15, 32\l  %18 = ashr exact i64 %17, 32\l  %19 = getelementptr inbounds float, float addrspace(1)* %1, i64 %18\l  %20 = load float, float addrspace(1)* %19, align 4, !tbaa !7\l  %21 = add nsw i32 %16, %0\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds float, float addrspace(1)* %1, i64 %22\l  %24 = load float, float addrspace(1)* %23, align 4, !tbaa !7\l  %25 = shl nsw i32 %0, 1\l  %26 = add nsw i32 %25, %16\l  %27 = sext i32 %26 to i64\l  %28 = getelementptr inbounds float, float addrspace(1)* %1, i64 %27\l  %29 = load float, float addrspace(1)* %28, align 4, !tbaa !7\l  %30 = mul nsw i32 %0, 3\l  %31 = add nsw i32 %30, %16\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds float, float addrspace(1)* %1, i64 %32\l  %34 = load float, float addrspace(1)* %33, align 4, !tbaa !7\l  %35 = shl nsw i32 %0, 2\l  %36 = add nsw i32 %35, %16\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds float, float addrspace(1)* %1, i64 %37\l  %39 = load float, float addrspace(1)* %38, align 4, !tbaa !7\l  %40 = fdiv contract float %24, %20\l  %41 = fdiv contract float %29, %20\l  %42 = fdiv contract float %34, %20\l  %43 = fmul contract float %40, %40\l  %44 = fmul contract float %41, %41\l  %45 = fadd contract float %43, %44\l  %46 = fmul contract float %42, %42\l  %47 = fadd contract float %45, %46\l  %48 = fmul contract float %20, 5.000000e-01\l  %49 = fmul contract float %48, %47\l  %50 = fsub contract float %39, %49\l  %51 = fmul contract float %50, 0x3FD9999980000000\l  %52 = fmul contract float %51, 0x3FF6666660000000\l  %53 = fdiv contract float %52, %20\l  %54 = fcmp olt float %53, 0x39F0000000000000\l  %55 = select i1 %54, float 0x41F0000000000000, float 1.000000e+00\l  %56 = fmul float %53, %55\l  %57 = tail call float @llvm.sqrt.f32(float %56) #3\l  %58 = bitcast float %57 to i32\l  %59 = add nsw i32 %58, -1\l  %60 = bitcast i32 %59 to float\l  %61 = add nsw i32 %58, 1\l  %62 = bitcast i32 %61 to float\l  %63 = tail call i1 @llvm.amdgcn.class.f32(float %56, i32 608) #3\l  %64 = select i1 %54, float 0x3EF0000000000000, float 1.000000e+00\l  %65 = fneg float %62\l  %66 = tail call float @llvm.fma.f32(float %65, float %57, float %56) #3\l  %67 = fcmp ogt float %66, 0.000000e+00\l  %68 = fneg float %60\l  %69 = tail call float @llvm.fma.f32(float %68, float %57, float %56) #3\l  %70 = fcmp ole float %69, 0.000000e+00\l  %71 = select i1 %70, float %60, float %57\l  %72 = select i1 %67, float %62, float %71\l  %73 = fmul float %64, %72\l  %74 = select i1 %63, float %56, float %73\l  %75 = getelementptr inbounds float, float addrspace(1)* %2, i64 %18\l  %76 = load float, float addrspace(1)* %75, align 4, !tbaa !7\l  %77 = fcmp olt float %76, 0x39F0000000000000\l  %78 = select i1 %77, float 0x41F0000000000000, float 1.000000e+00\l  %79 = fmul float %76, %78\l  %80 = tail call float @llvm.sqrt.f32(float %79) #3\l  %81 = bitcast float %80 to i32\l  %82 = add nsw i32 %81, -1\l  %83 = bitcast i32 %82 to float\l  %84 = add nsw i32 %81, 1\l  %85 = bitcast i32 %84 to float\l  %86 = tail call i1 @llvm.amdgcn.class.f32(float %79, i32 608) #3\l  %87 = select i1 %77, float 0x3EF0000000000000, float 1.000000e+00\l  %88 = fneg float %85\l  %89 = tail call float @llvm.fma.f32(float %88, float %80, float %79) #3\l  %90 = fcmp ogt float %89, 0.000000e+00\l  %91 = fneg float %83\l  %92 = tail call float @llvm.fma.f32(float %91, float %80, float %79) #3\l  %93 = fcmp ole float %92, 0.000000e+00\l  %94 = select i1 %93, float %83, float %80\l  %95 = select i1 %90, float %85, float %94\l  %96 = fmul float %87, %95\l  %97 = select i1 %86, float %79, float %96\l  %98 = fcmp olt float %47, 0x39F0000000000000\l  %99 = select i1 %98, float 0x41F0000000000000, float 1.000000e+00\l  %100 = fmul float %47, %99\l  %101 = tail call float @llvm.sqrt.f32(float %100) #3\l  %102 = bitcast float %101 to i32\l  %103 = add nsw i32 %102, -1\l  %104 = bitcast i32 %103 to float\l  %105 = add nsw i32 %102, 1\l  %106 = bitcast i32 %105 to float\l  %107 = tail call i1 @llvm.amdgcn.class.f32(float %100, i32 608) #3\l  %108 = select i1 %98, float 0x3EF0000000000000, float 1.000000e+00\l  %109 = fneg float %106\l  %110 = tail call float @llvm.fma.f32(float %109, float %101, float %100) #3\l  %111 = fcmp ogt float %110, 0.000000e+00\l  %112 = fneg float %104\l  %113 = tail call float @llvm.fma.f32(float %112, float %101, float %100) #3\l  %114 = fcmp ole float %113, 0.000000e+00\l  %115 = select i1 %114, float %104, float %101\l  %116 = select i1 %111, float %106, float %115\l  %117 = fmul float %108, %116\l  %118 = select i1 %107, float %100, float %117\l  %119 = fadd contract float %118, %74\l  %120 = fmul contract float %97, %119\l  %121 = fdiv contract float 5.000000e-01, %120\l  %122 = getelementptr inbounds float, float addrspace(1)* %3, i64 %18\l  store float %121, float addrspace(1)* %122, align 4, !tbaa !7\l  ret void\l}"];
}
